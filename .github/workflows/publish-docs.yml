name: Publish Documentation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
env:
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-xmlutils
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - uses: jvalkeal/setup-maven@v1
        with:
          maven-version: 3.8.8
          maven-mirror: 'https://dlcdn.apache.org/maven/maven-3/'
      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: 'https://repo.spring.io'
          JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
      - name: Configure JFrog Cli
        run: |
          jfrog rt mvnc \
            --server-id-resolve=${{ vars.JF_SERVER_ID }} \
            --server-id-deploy=${{ vars.JF_SERVER_ID }} \
            --repo-resolve-releases=libs-release-staging \
            --repo-resolve-snapshots=libs-snapshot \
            --repo-deploy-releases=libs-staging-local \
            --repo-deploy-snapshots=libs-snapshot-local
          echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-main-release >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

#       build and publish to configured target
      - name: Build and Publish
        run: |
          ./mvnw build-helper:parse-version versions:set \
            -gs .github/settings.xml \
            -DskipResolution=true \
            -DprocessAllModules=true \
            -DgenerateBackupPoms=false \
            -Dartifactory.publish.artifacts=false \
            -DnewVersion=${{ inputs.version }} \
            -B --no-transfer-progress
          ./mvnw versions:set-property \
            -gs .github/settings.xml \
            -Pstagingrelease \
            -DskipResolution=true \
            -DgenerateBackupPoms=false \
            -Dproperty=dataflow.version \
            -DnewVersion=${{ inputs.version }} \
            -B --no-transfer-progress
          ./mvnw versions:set-property \
            -gs .github/settings.xml \
            -Pstagingrelease \
            -DskipResolution=true \
            -DgenerateBackupPoms=false \
            -Dproperty=skipper.version \
            -DnewVersion=${{ inputs.version }} \
            -B --no-transfer-progress
          spring_cloud_dataflow_version=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "spring_cloud_dataflow_version=$spring_cloud_dataflow_version" >> $GITHUB_ENV
          echo "::notice ::set dataflow.version=${spring_cloud_dataflow_version}"
          echo "::notice ::build-clean"
          jfrog rt build-clean
          echo "::notice ::set-package-version"
          ./spring-cloud-dataflow-package/set-package-version.sh
          echo "::notice ::install"
          ./mvnw -gs .github/settings.xml -am -pl :spring-cloud-skipper-server-core install -DskipTests -T 1C  -B --no-transfer-progress
          jfrog rt mvn -gs .github/settings.xml \
            -Pstagingrelease,deploymentfiles,docs \
            -pl :spring-cloud-dataflow-classic-docs,:spring-cloud-dataflow-docs,:spring-cloud-skipper-docs \
            -B install -DskipTests --no-transfer-progress
          echo "::notice ::build-publish"
          jfrog rt build-publish                    
          echo "::info ::spring_cloud_dataflow_version=$spring_cloud_dataflow_version" 
          echo "::info ::spring_cloud_dataflow_buildname=$JFROG_CLI_BUILD_NAME" 
          echo "::info ::spring_cloud_dataflow_buildnumber=$JFROG_CLI_BUILD_NUMBER" 
