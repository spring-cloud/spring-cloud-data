# Worker which is dispatched from build-snapshot-controller workflow.
name: Build Snapshot Worker

on:
  workflow_dispatch:
    inputs:
      build-zoo-handler:
        description: 'Build Zoo Handler Payload'
        required: true

env:
  MAVEN_THREADS: '-T 1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
    - uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'liberica'
    - uses: jvalkeal/setup-maven@v1
      with:
        maven-version: 3.8.8
        maven-mirror: 'https://dlcdn.apache.org/maven/maven-3/'
    - uses: jfrog/setup-jfrog-cli@v1
      with:
        version: 1.46.4
      env:
        JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Login dockerhub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Configure JFrog Cli
      run: |
        jfrog rt mvnc \
          --server-id-resolve=repo.spring.io \
          --server-id-deploy=repo.spring.io \
          --repo-resolve-releases=libs-milestone \
          --repo-resolve-snapshots=libs-snapshot \
          --repo-deploy-releases=libs-release-local \
          --repo-deploy-snapshots=libs-snapshot-local
        echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-main >> $GITHUB_ENV
        echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
    - name: Extract Zoo Context Properties
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-extract-context-properties: true
    - name: 'Install: xmllint'
      uses: ./.github/actions/install-xmlutils
    - name: Build and Publish
      shell: bash
      timeout-minutes: 75
      run: |
        mvn clean
        ./spring-cloud-dataflow-package/set-package-version.sh
        jfrog rt mvn install -Pfull,docs -B
        jfrog rt mvn install -pl spring-cloud-dataflow-package -B
        jfrog rt build-publish
        PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$PROJECT_VERSION >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname=spring-cloud-dataflow-main >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_skipper_version=$(mvn help:evaluate -Dexpression=spring-cloud-skipper.version -pl spring-cloud-dataflow-parent -q -DforceStdout) >> $GITHUB_ENV
#        echo "Determine project version"
#        set +e
#        echo "::info ::Project version=$PROJECT_VERSION"
#        SKIPPER_DOCS_PATTERN=$(.github/workflows/skipper-docs-name.sh $PROJECT_VERSION libs-snapshot-local)
#        if [[ "$SKIPPER_DOCS_PATTERN" == *"does not exist"* ]]; then
#          echo "::error ::Skipper Docs URL=$SKIPPER_DOCS_PATTERN"
#        else
#          echo "::info ::Skipper Docs URL=$SKIPPER_DOCS_PATTERN"
#          jfrog rt sp --build "$SKIPPER_DOCS_PATTERN" "buildName=$JFROG_CLI_BUILD_NAME;buildNumber=$JFROG_CLI_BUILD_NUMBER"
#          echo "::info ::Skipper Docs Set Properties buildName=$JFROG_CLI_BUILD_NAME;buildNumber=$JFROG_CLI_BUILD_NUMBER"
#        fi
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: ${{ success() || failure() }}
      with:
        name: Unit Tests
        path: '**/surefire-reports/*.xml'
        reporter: java-junit
        list-tests: failed
    - name: Clean cache
      run: |
        find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
    outputs:
      version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
      BUILD_ZOO_HANDLER_spring_cloud_dataflow_version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
      BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname }}
      BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber }}
      BUILD_ZOO_HANDLER_spring_cloud_skipper_version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_skipper_version }}
  database-tests:
    if: github.repository_owner == 'spring-cloud'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db: [ 'ORACLE', 'DB2' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-${{ matrix.db }}
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'liberica'
      - uses: jvalkeal/setup-maven@v1
        with:
          maven-version: 3.8.8
          maven-mirror: 'https://dlcdn.apache.org/maven/maven-3/'
      - uses: jfrog/setup-jfrog-cli@v1
        with:
          version: 1.46.4
        env:
          JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
      - name: Login dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure JFrog Cli
        run: |
          jfrog rt mvnc \
            --server-id-resolve=repo.spring.io \
            --server-id-deploy=repo.spring.io \
            --repo-resolve-releases=libs-milestone \
            --repo-resolve-snapshots=libs-snapshot \
            --repo-deploy-releases=libs-release-local \
            --repo-deploy-snapshots=libs-snapshot-local
      - uses: ./.github/actions/install-xmlutils
      - name: Test
        shell: bash
        timeout-minutes: 75
        run: |
          jfrog rt mvn clean install -s .settings.xml -DskipTests -am -pl :spring-cloud-dataflow-server,:spring-cloud-skipper-server
          export ENABLE_${{ matrix.db }}=true
          jfrog rt mvn test -s .settings.xml -pl :spring-cloud-dataflow-server,:spring-cloud-skipper-server -Dgroups=${{ matrix.db }}
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: ${{ success() || failure() }}
        with:
          name: Unit Tests
          path: '**/surefire-reports/*.xml'
          reporter: java-junit
          list-tests: failed
      - name: Capture Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/target/surefire-reports/**/*.*'
          retention-days: 7
          if-no-files-found: ignore
      #     clean m2 cache
      - name: Clean cache
        run: |
          find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
  images:
    name: Build and Publish Images
    needs: [ build ]
    uses: ./.github/workflows/build-images.yml
    with:
      version: ${{ needs.build.outputs.version }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      GCR_JSON_KEY: ${{ secrets.GCR_JSON_KEY }}

  wrap:
    needs: [ build, images, database-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Save env
        shell: bash
        if: ${{ success() }}
        run: |
          echo "BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}" >> $GITHUB_ENV
          echo "BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname }}" >> $GITHUB_ENV 
          echo "BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber }}" >> $GITHUB_ENV
          echo "BUILD_ZOO_HANDLER_spring_cloud_skipper_version=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_skipper_version }}" >> $GITHUB_ENV
#       zoo success
      - name: Notify Build Success Zoo Handler Controller
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
          dispatch-handler-client-payload-data: >
            {
              "event": "build-succeed"
            }
#       zoo failure
      - name: Notify Build Failure Zoo Handler Controller
        if: ${{ failure() }}
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
          dispatch-handler-client-payload-data: >
            {
              "event": "build-failed",
              "message": "spring-cloud-dataflow failed"
            }
