version: '3.3'
services:

  # Grafana is configured with the Prometheus datasource.
  # Use `docker exec -it prometheus /bin/sh` to logging in the container
  prometheus:
    image: prom/prometheus:v2.7.1
    container_name: 'prometheus'
    volumes:
      - 'scdf-targets:/etc/prometheus/'
      - './prometheus-local-file.yml:/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'

  # Grafana SCDF Prometheus pre-built image:
  grafana:
    # To use a locally build grafana image, comment out the 'image:' and uncomment 'build:' section. Then run 'docker-compose up -d --build`
    # build: './grafana'
    image: springcloud/spring-cloud-dataflow-grafana-prometheus:${DATAFLOW_VERSION:?DATAFLOW_VERSION is not set! Use 'export DATAFLOW_VERSION=local-server-image-tag'}
    container_name: 'grafana'
    ports:
      - '3000:3000'

  # The service-discovery container uses the images built from the
  # https://github.com/tzolov/spring-cloud-dataflow-prometheus-service-discovery project.
  # Use `docker exec -it service-discovery /bin/sh` to logging the container
  service-discovery:
    image: springcloud/spring-cloud-dataflow-prometheus-service-discovery:0.0.2
    container_name: 'service-discovery'
    volumes:
      - 'scdf-targets:/tmp/scdf-targets/'
    expose:
      - '8181'
    ports:
      - '8181:8181'
    environment:
      - 'SCDF_HOST_IP=${SCDF_HOST_IP:?SCDF_HOST_IP is not set!
      Use "export SCDF_HOST_IP=<SCDF Server IP>". Note: 127.0.0.1 is not a valid option!}'

volumes:
  scdf-targets:

